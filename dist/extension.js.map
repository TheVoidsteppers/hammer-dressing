{"version":3,"file":"extension.js","mappings":"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","sources":[".././src/extension.ts","../external commonjs \"vscode\"",".././src/skipWorktree.ts","../webpack/bootstrap","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["import * as vscode from 'vscode';\r\nimport { TreeItem } from 'vscode';\r\nimport { SkipWorktreeProvider } from './skipWorktree';\r\nimport { GitExtension } from './api/git'\r\n\r\n\r\nexport async function activate(context: vscode.ExtensionContext): Promise<void> {\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('extension.HammerDressing.git.skip-worktree', (...args) => {\r\n      const filePaths = args[1]\r\n      handleToggleSkipWorktree(filePaths, true).then(() => {\r\n        skipWorktreeProvider.refresh()\r\n      })\r\n    }),\r\n    vscode.commands.registerCommand('extension.HammerDressing.git.no-skip-worktree', (...args) => {\r\n      const filePaths = args[1]\r\n      handleToggleSkipWorktree(filePaths, false).then(() => {\r\n        skipWorktreeProvider.refresh()\r\n      })\r\n    }),\r\n  );\r\n\r\n  const skipWorktreeProvider = new SkipWorktreeProvider();\r\n\tvscode.window.registerTreeDataProvider('SkipWorktreeFiles', skipWorktreeProvider);\r\n\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand('extension.HammerDressing.git.skip-worktree-refresh', () => skipWorktreeProvider.refresh()),\r\n    vscode.commands.registerCommand('extension.HammerDressing.git.no-skip-worktree-in-treeview', (treeItem: TreeItem) => {\r\n      handleNoSkipWorktree(treeItem).then(() => {\r\n        skipWorktreeProvider.refresh()\r\n      })\r\n    }),\r\n  )\r\n}\r\n\r\n\r\nasync function handleToggleSkipWorktree (filePaths: vscode.Uri[], isSkip: boolean): Promise<void> {\r\n  const ext = vscode.extensions.getExtension<GitExtension>('vscode.git');\r\n  await ext?.activate();\r\n  const gitExtension = ext?.exports;\r\n  const git = gitExtension?.model?.git\r\n  const gitApi = gitExtension?.getAPI(1);\r\n\r\n  const repositoryRoot = gitApi?.repositories[0]?.rootUri?.fsPath\r\n\r\n  if (Array.isArray(filePaths)) {\r\n    const execArr = filePaths.map((filePath) => {\r\n      const folder = vscode.workspace.getWorkspaceFolder(filePath)\r\n      if (!folder || !folder.uri) {\r\n        return\r\n      }\r\n      const path = filePath.path.replace(folder!.uri.path, '.')\r\n      const command = `update-index ${ isSkip ? '--skip-worktree' : '--no-skip-worktree' } ${path}`\r\n\r\n      return git.exec(repositoryRoot, command.split(' '))\r\n    })\r\n    await Promise.all(execArr)\r\n  }\r\n}\r\n\r\nasync function handleNoSkipWorktree (treeItem: TreeItem): Promise<void> {\r\n  const ext = vscode.extensions.getExtension<GitExtension>('vscode.git');\r\n  await ext?.activate();\r\n  const gitExtension = ext?.exports;\r\n  const git = gitExtension?.model.git\r\n  const gitApi = gitExtension?.getAPI(1);\r\n\r\n  const repositoryRoot = gitApi?.repositories[0]?.rootUri?.fsPath\r\n  const command = `update-index --no-skip-worktree ${treeItem.label}`\r\n\r\n  await git.exec(repositoryRoot, command.split(' '))\r\n}\r\n","module.exports = require(\"vscode\");","import * as vscode from 'vscode';\r\nimport { TreeItem, ProviderResult } from 'vscode';\r\nimport { GitExtension } from './api/git'\r\n\r\nexport class SkipWorktreeProvider implements vscode.TreeDataProvider<TreeItem> {\r\n\r\n  private _onDidChangeTreeData: vscode.EventEmitter<void> = new vscode.EventEmitter<void>()\r\n  readonly onDidChangeTreeData: vscode.Event<void> = this._onDidChangeTreeData.event\r\n\r\n  private data: TreeItem[] = []\r\n\r\n  constructor() {\r\n    this.parseTree().then(() => {\r\n      this._onDidChangeTreeData.fire()\r\n    })\r\n  }\r\n\r\n  get gitExtension () {\r\n    const ext = vscode.extensions.getExtension<GitExtension>('vscode.git');\r\n    const gitExtension = ext?.exports;\r\n    return gitExtension\r\n  }\r\n\r\n  get git() {\r\n    const git = this.gitExtension?.model?.git\r\n    return git\r\n  }\r\n\r\n  get repositoryRoot () : string | undefined {\r\n    return this.gitExtension?.getAPI(1)?.repositories[0]?.rootUri?.fsPath\r\n  }\r\n\r\n  async refresh(): Promise<void> {\r\n    await this.parseTree();\r\n    this._onDidChangeTreeData.fire();\r\n  }\r\n\r\n  private async parseTree(): Promise<void> {\r\n    if (!this.repositoryRoot) return\r\n    this.data = [];\r\n    const lsFiles = await this.git.exec(this.repositoryRoot, 'ls-files -v'.split(' '))\r\n    const stdoutStr = lsFiles.stdout\r\n    const skipFiles = stdoutStr.split('\\n').filter((file: string) => file.startsWith('S ') ||  file.startsWith('s ')).map((file: string) => file.replace(/s /i, ''))\r\n\r\n    this.data = skipFiles.map((item: string)  => {\r\n      return new TreeItem(item)\r\n    })\r\n  }\r\n\r\n  getTreeItem(element: TreeItem): TreeItem | Thenable<TreeItem> {\r\n    return element\r\n  }\r\n\r\n  getChildren(): ProviderResult<TreeItem[]> {\r\n    return this.data;\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(0);\n",""],"names":[],"sourceRoot":""}